{"version":3,"file":null,"sources":["../src/index.js"],"sourcesContent":["import {Component, utils} from 'js-data'\n\nexport const noop = function (...args) {\n  const opts = args[args.length - 1]\n  this.dbg(opts.op, ...args)\n  return utils.resolve()\n}\n\nexport const noop2 = function (...args) {\n  const opts = args[args.length - 2]\n  this.dbg(opts.op, ...args)\n  return utils.resolve()\n}\n\nexport const unique = function (array) {\n  const seen = {}\n  const final = []\n  array.forEach(function (item) {\n    if (item in seen) {\n      return\n    }\n    final.push(item)\n    seen[item] = 0\n  })\n  return final\n}\n\nexport const withoutRelations = function (mapper, props, opts) {\n  opts || (opts = {})\n  opts.with || (opts.with = [])\n  const relationFields = mapper.relationFields || []\n  const toStrip = relationFields.filter((value) => opts.with.indexOf(value) === -1)\n  return utils.omit(props, toStrip)\n}\n\nexport const reserved = [\n  'orderBy',\n  'sort',\n  'limit',\n  'offset',\n  'skip',\n  'where'\n]\n\n/**\n * Response object used when `raw` is `true`. May contain other fields in\n * addition to `data`.\n *\n * @class Response\n */\nexport function Response (data, meta, op) {\n  meta || (meta = {})\n\n  /**\n   * Response data.\n   *\n   * @name Response#data\n   * @type {*}\n   */\n  this.data = data\n\n  utils.fillIn(this, meta)\n\n  /**\n   * The operation for which the response was created.\n   *\n   * @name Response#op\n   * @type {string}\n   */\n  this.op = op\n}\n\nconst DEFAULTS = {\n  /**\n   * Whether to log debugging information.\n   *\n   * @name Adapter#debug\n   * @type {boolean}\n   * @default false\n   */\n  debug: false,\n\n  /**\n   * Whether to return a more detailed response object.\n   *\n   * @name Adapter#raw\n   * @type {boolean}\n   * @default false\n   */\n  raw: false\n}\n\n/**\n * Abstract class meant to be extended by adapters.\n *\n * @class Adapter\n * @abstract\n * @extends Component\n * @param {Object} [opts] Configuration opts.\n * @param {boolean} [opts.debug=false] Whether to log debugging information.\n * @param {boolean} [opts.raw=false] Whether to return a more detailed response\n * object.\n */\nexport function Adapter (opts) {\n  utils.classCallCheck(this, Adapter)\n  Component.call(this)\n  opts || (opts = {})\n  utils.fillIn(opts, DEFAULTS)\n  utils.fillIn(this, opts)\n}\n\nComponent.extend({\n  constructor: Adapter,\n\n  /**\n   * Lifecycle method method called by <a href=\"#count__anchor\">count</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#count__anchor\">count</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the count.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#count__anchor\">count</a>.\n   *\n   * @name Adapter#afterCount\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @property {string} opts.op `afterCount`\n   * @param {Object|Response} response Count or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterCount: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#create__anchor\">create</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#create__anchor\">create</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the created record.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#create__anchor\">create</a>.\n   *\n   * @name Adapter#afterCreate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @property {string} opts.op `afterCreate`\n   * @param {Object|Response} response Created record or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterCreate: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#createMany__anchor\">createMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the created records.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * @name Adapter#afterCreate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object[]} props The `props` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @property {string} opts.op `afterCreateMany`\n   * @param {Object[]|Response} response Created records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterCreateMany: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroy__anchor\">destroy</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be `undefined`.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * @name Adapter#afterDestroy\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @property {string} opts.op `afterDestroy`\n   * @param {undefined|Response} response `undefined` or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterDestroy: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroyAll__anchor\">destroyAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be `undefined`.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * @name Adapter#afterDestroyAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @property {string} opts.op `afterDestroyAll`\n   * @param {undefined|Response} response `undefined` or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterDestroyAll: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#find__anchor\">find</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#find__anchor\">find</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the found record, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#find__anchor\">find</a>.\n   *\n   * @name Adapter#afterFind\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @property {string} opts.op `afterFind`\n   * @param {Object|Response} response The found record or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterFind: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#findAll__anchor\">findAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the found records, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * @name Adapter#afterFindAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @property {string} opts.op `afterFindAll`\n   * @param {Object[]|Response} response The found records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterFindAll: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#sum__anchor\">sum</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#sum__anchor\">sum</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the sum.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#sum__anchor\">sum</a>.\n   *\n   * @name Adapter#afterSum\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @param {string} field The `field` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @property {string} opts.op `afterSum`\n   * @param {Object|Response} response Count or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterSum: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#update__anchor\">update</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#update__anchor\">update</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the updated record.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#update__anchor\">update</a>.\n   *\n   * @name Adapter#afterUpdate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @property {string} opts.op `afterUpdate`\n   * @param {Object|Response} response The updated record or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterUpdate: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateAll__anchor\">updateAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the updated records, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * @name Adapter#afterUpdateAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @property {string} opts.op `afterUpdateAll`\n   * @param {Object[]|Response} response The updated records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterUpdateAll: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateMany__anchor\">updateMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the updated records, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * @name Adapter#afterUpdateMany\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object[]} records The `records` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @property {string} opts.op `afterUpdateMany`\n   * @param {Object[]|Response} response The updated records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterUpdateMany: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#count__anchor\">count</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#count__anchor\">count</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#count__anchor\">count</a>.\n   *\n   * @name Adapter#beforeCount\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @property {string} opts.op `beforeCount`\n   */\n  beforeCount: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#create__anchor\">create</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#create__anchor\">create</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#create__anchor\">create</a>.\n   *\n   * @name Adapter#beforeCreate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @property {string} opts.op `beforeCreate`\n   */\n  beforeCreate: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#createMany__anchor\">createMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * @name Adapter#beforeCreateMany\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object[]} props The `props` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @property {string} opts.op `beforeCreateMany`\n   */\n  beforeCreateMany: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroy__anchor\">destroy</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * @name Adapter#beforeDestroy\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @property {string} opts.op `beforeDestroy`\n   */\n  beforeDestroy: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroyAll__anchor\">destroyAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * @name Adapter#beforeDestroyAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @property {string} opts.op `beforeDestroyAll`\n   */\n  beforeDestroyAll: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#find__anchor\">find</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#find__anchor\">find</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#find__anchor\">find</a>.\n   *\n   * @name Adapter#beforeFind\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @property {string} opts.op `beforeFind`\n   */\n  beforeFind: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#findAll__anchor\">findAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * @name Adapter#beforeFindAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @property {string} opts.op `beforeFindAll`\n   */\n  beforeFindAll: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#sum__anchor\">sum</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#sum__anchor\">sum</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#sum__anchor\">sum</a>.\n   *\n   * @name Adapter#beforeSum\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @property {string} opts.op `beforeSum`\n   */\n  beforeSum: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#update__anchor\">update</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#update__anchor\">update</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#update__anchor\">update</a>.\n   *\n   * @name Adapter#beforeUpdate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @property {string} opts.op `beforeUpdate`\n   */\n  beforeUpdate: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateAll__anchor\">updateAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * @name Adapter#beforeUpdateAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @property {string} opts.op `beforeUpdateAll`\n   */\n  beforeUpdateAll: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateMany__anchor\">updateMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * @name Adapter#beforeUpdateMany\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object[]} props The `props` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @property {string} opts.op `beforeUpdateMany`\n   */\n  beforeUpdateMany: noop,\n\n  /**\n   * Retrieve the number of records that match the selection query. Called by\n   * `Mapper#count`.\n   *\n   * @name Adapter#count\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  count (mapper, query, opts) {\n    let op\n    query || (query = {})\n    opts || (opts = {})\n\n    // beforeCount lifecycle hook\n    op = opts.op = 'beforeCount'\n    return utils.resolve(this[op](mapper, query, opts))\n      .then(() => {\n        // Allow for re-assignment from lifecycle hook\n        op = opts.op = 'count'\n        this.dbg(op, mapper, query, opts)\n        return utils.resolve(this._count(mapper, query, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, op)\n        response = this.respond(response, opts)\n\n        // afterCount lifecycle hook\n        op = opts.op = 'afterCount'\n        return utils.resolve(this[op](mapper, query, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Create a new record. Called by `Mapper#create`.\n   *\n   * @name Adapter#create\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The record to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  create (mapper, props, opts) {\n    let op\n    props || (props = {})\n    opts || (opts = {})\n\n    // beforeCreate lifecycle hook\n    op = opts.op = 'beforeCreate'\n    return utils.resolve(this[op](mapper, props, opts))\n      .then((_props) => {\n        // Allow for re-assignment from lifecycle hook\n        props = _props === undefined ? props : _props\n        props = withoutRelations(mapper, props, opts)\n        op = opts.op = 'create'\n        this.dbg(op, mapper, props, opts)\n        return utils.resolve(this._create(mapper, props, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, 'create')\n        response.created = data ? 1 : 0\n        response = this.respond(response, opts)\n\n        // afterCreate lifecycle hook\n        op = opts.op = 'afterCreate'\n        return utils.resolve(this[op](mapper, props, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Create multiple records in a single batch. Called by `Mapper#createMany`.\n   *\n   * @name Adapter#createMany\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The records to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  createMany (mapper, props, opts) {\n    let op\n    props || (props = {})\n    opts || (opts = {})\n\n    // beforeCreateMany lifecycle hook\n    op = opts.op = 'beforeCreateMany'\n    return utils.resolve(this[op](mapper, props, opts))\n      .then((_props) => {\n        // Allow for re-assignment from lifecycle hook\n        props = _props === undefined ? props : _props\n        props = props.map((record) => withoutRelations(mapper, record, opts))\n        op = opts.op = 'createMany'\n        this.dbg(op, mapper, props, opts)\n        return utils.resolve(this._createMany(mapper, props, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        data || (data = [])\n        result || (result = {})\n        let response = new Response(data, result, 'createMany')\n        response.created = data.length\n        response = this.respond(response, opts)\n\n        // afterCreateMany lifecycle hook\n        op = opts.op = 'afterCreateMany'\n        return utils.resolve(this[op](mapper, props, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Destroy the record with the given primary key. Called by\n   * `Mapper#destroy`.\n   *\n   * @name Adapter#destroy\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  destroy (mapper, id, opts) {\n    let op\n    opts || (opts = {})\n\n    // beforeDestroy lifecycle hook\n    op = opts.op = 'beforeDestroy'\n    return utils.resolve(this[op](mapper, id, opts))\n      .then(() => {\n        op = opts.op = 'destroy'\n        this.dbg(op, mapper, id, opts)\n        return utils.resolve(this._destroy(mapper, id, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, 'destroy')\n        response = this.respond(response, opts)\n\n        // afterDestroy lifecycle hook\n        op = opts.op = 'afterDestroy'\n        return utils.resolve(this[op](mapper, id, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Destroy the records that match the selection query. Called by\n   * `Mapper#destroyAll`.\n   *\n   * @name Adapter#destroyAll\n   * @method\n   * @param {Object} mapper the mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  destroyAll (mapper, query, opts) {\n    let op\n    query || (query = {})\n    opts || (opts = {})\n\n    // beforeDestroyAll lifecycle hook\n    op = opts.op = 'beforeDestroyAll'\n    return utils.resolve(this[op](mapper, query, opts))\n      .then(() => {\n        op = opts.op = 'destroyAll'\n        this.dbg(op, mapper, query, opts)\n        return utils.resolve(this._destroyAll(mapper, query, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, 'destroyAll')\n        response = this.respond(response, opts)\n\n        // afterDestroyAll lifecycle hook\n        op = opts.op = 'afterDestroyAll'\n        return utils.resolve(this[op](mapper, query, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Load a belongsTo relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#loadBelongsTo\n   * @method\n   * @return {Promise}\n   */\n  loadBelongsTo (mapper, def, records, __opts) {\n    const relationDef = def.getRelation()\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      const record = records\n      return this.find(relationDef, this.makeBelongsToForeignKey(mapper, def, record), __opts)\n        .then((relatedItem) => {\n          def.setLocalField(record, relatedItem)\n        })\n    } else {\n      const keys = records\n        .map((record) => this.makeBelongsToForeignKey(mapper, def, record))\n        .filter((key) => key)\n      return this.findAll(relationDef, {\n        where: {\n          [relationDef.idAttribute]: {\n            'in': keys\n          }\n        }\n      }, __opts).then((relatedItems) => {\n        records.forEach((record) => {\n          relatedItems.forEach((relatedItem) => {\n            if (relatedItem[relationDef.idAttribute] === record[def.foreignKey]) {\n              def.setLocalField(record, relatedItem)\n            }\n          })\n        })\n      })\n    }\n  },\n\n  /**\n   * Retrieve the record with the given primary key. Called by `Mapper#find`.\n   *\n   * @name Adapter#find\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n  find (mapper, id, opts) {\n    let record, op\n    opts || (opts = {})\n    opts.with || (opts.with = [])\n\n    // beforeFind lifecycle hook\n    op = opts.op = 'beforeFind'\n    return utils.resolve(this[op](mapper, id, opts))\n      .then(() => {\n        op = opts.op = 'find'\n        this.dbg(op, mapper, id, opts)\n        return utils.resolve(this._find(mapper, id, opts))\n      })\n      .then((results) => {\n        let [_record] = results\n        if (!_record) {\n          return\n        }\n        record = _record\n        const tasks = []\n\n        utils.forEachRelation(mapper, opts, (def, __opts) => {\n          let task\n          if (def.foreignKey && (def.type === 'hasOne' || def.type === 'hasMany')) {\n            if (def.type === 'hasOne') {\n              task = this.loadHasOne(mapper, def, record, __opts)\n            } else {\n              task = this.loadHasMany(mapper, def, record, __opts)\n            }\n          } else if (def.type === 'hasMany' && def.localKeys) {\n            task = this.loadHasManyLocalKeys(mapper, def, record, __opts)\n          } else if (def.type === 'hasMany' && def.foreignKeys) {\n            task = this.loadHasManyForeignKeys(mapper, def, record, __opts)\n          } else if (def.type === 'belongsTo') {\n            task = this.loadBelongsTo(mapper, def, record, __opts)\n          }\n          if (task) {\n            tasks.push(task)\n          }\n        })\n\n        return utils.Promise.all(tasks)\n      })\n      .then(() => {\n        let response = new Response(record, {}, 'find')\n        response.found = record ? 1 : 0\n        response = this.respond(response, opts)\n\n        // afterFind lifecycle hook\n        op = opts.op = 'afterFind'\n        return utils.resolve(this[op](mapper, id, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Retrieve the records that match the selection query.\n   *\n   * @name Adapter#findAll\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n  findAll (mapper, query, opts) {\n    opts || (opts = {})\n    opts.with || (opts.with = [])\n\n    let records = []\n    let op\n    const activeWith = opts._activeWith\n\n    if (utils.isObject(activeWith)) {\n      const activeQuery = activeWith.query || {}\n      if (activeWith.replace) {\n        query = activeQuery\n      } else {\n        utils.deepFillIn(query, activeQuery)\n      }\n    }\n\n    // beforeFindAll lifecycle hook\n    op = opts.op = 'beforeFindAll'\n    return utils.resolve(this[op](mapper, query, opts))\n      .then(() => {\n        op = opts.op = 'findAll'\n        this.dbg(op, mapper, query, opts)\n        return utils.resolve(this._findAll(mapper, query, opts))\n      })\n      .then((results) => {\n        let [_records] = results\n        _records || (_records = [])\n        records = _records\n        const tasks = []\n        utils.forEachRelation(mapper, opts, (def, __opts) => {\n          let task\n          if (def.foreignKey && (def.type === 'hasOne' || def.type === 'hasMany')) {\n            if (def.type === 'hasMany') {\n              task = this.loadHasMany(mapper, def, records, __opts)\n            } else {\n              task = this.loadHasOne(mapper, def, records, __opts)\n            }\n          } else if (def.type === 'hasMany' && def.localKeys) {\n            task = this.loadHasManyLocalKeys(mapper, def, records, __opts)\n          } else if (def.type === 'hasMany' && def.foreignKeys) {\n            task = this.loadHasManyForeignKeys(mapper, def, records, __opts)\n          } else if (def.type === 'belongsTo') {\n            task = this.loadBelongsTo(mapper, def, records, __opts)\n          }\n          if (task) {\n            tasks.push(task)\n          }\n        })\n        return utils.Promise.all(tasks)\n      })\n      .then(() => {\n        let response = new Response(records, {}, 'findAll')\n        response.found = records.length\n        response = this.respond(response, opts)\n\n        // afterFindAll lifecycle hook\n        op = opts.op = 'afterFindAll'\n        return utils.resolve(this[op](mapper, query, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Resolve the value of the specified option based on the given options and\n   * this adapter's settings. Override with care.\n   *\n   * @name Adapter#getOpt\n   * @method\n   * @param {string} opt The name of the option.\n   * @param {Object} [opts] Configuration options.\n   * @return {*} The value of the specified option.\n   */\n  getOpt (opt, opts) {\n    opts || (opts = {})\n    return opts[opt] === undefined ? utils.plainCopy(this[opt]) : utils.plainCopy(opts[opt])\n  },\n\n  /**\n   * Load a hasMany relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#loadHasMany\n   * @method\n   * @return {Promise}\n   */\n  loadHasMany (mapper, def, records, __opts) {\n    let singular = false\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      singular = true\n      records = [records]\n    }\n    const IDs = records.map((record) => this.makeHasManyForeignKey(mapper, def, record))\n    const query = {\n      where: {}\n    }\n    const criteria = query.where[def.foreignKey] = {}\n    if (singular) {\n      // more efficient query when we only have one record\n      criteria['=='] = IDs[0]\n    } else {\n      criteria['in'] = IDs.filter((id) => id)\n    }\n    return this.findAll(def.getRelation(), query, __opts).then((relatedItems) => {\n      records.forEach((record) => {\n        let attached = []\n        // avoid unneccesary iteration when we only have one record\n        if (singular) {\n          attached = relatedItems\n        } else {\n          relatedItems.forEach((relatedItem) => {\n            if (utils.get(relatedItem, def.foreignKey) === record[mapper.idAttribute]) {\n              attached.push(relatedItem)\n            }\n          })\n        }\n        def.setLocalField(record, attached)\n      })\n    })\n  },\n\n  loadHasManyLocalKeys (mapper, def, records, __opts) {\n    let record\n    const relatedMapper = def.getRelation()\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      record = records\n    }\n\n    if (record) {\n      return this.findAll(relatedMapper, {\n        where: {\n          [relatedMapper.idAttribute]: {\n            'in': this.makeHasManyLocalKeys(mapper, def, record)\n          }\n        }\n      }, __opts).then((relatedItems) => {\n        def.setLocalField(record, relatedItems)\n      })\n    } else {\n      let localKeys = []\n      records.forEach((record) => {\n        localKeys = localKeys.concat(this.makeHasManyLocalKeys(mapper, def, record))\n      })\n      return this.findAll(relatedMapper, {\n        where: {\n          [relatedMapper.idAttribute]: {\n            'in': unique(localKeys).filter((x) => x)\n          }\n        }\n      }, __opts).then((relatedItems) => {\n        records.forEach((item) => {\n          let attached = []\n          let itemKeys = utils.get(item, def.localKeys) || []\n          itemKeys = utils.isArray(itemKeys) ? itemKeys : Object.keys(itemKeys)\n          relatedItems.forEach((relatedItem) => {\n            if (itemKeys && itemKeys.indexOf(relatedItem[relatedMapper.idAttribute]) !== -1) {\n              attached.push(relatedItem)\n            }\n          })\n          def.setLocalField(item, attached)\n        })\n        return relatedItems\n      })\n    }\n  },\n\n  loadHasManyForeignKeys (mapper, def, records, __opts) {\n    const relatedMapper = def.getRelation()\n    const idAttribute = mapper.idAttribute\n    let record\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      record = records\n    }\n\n    if (record) {\n      return this.findAll(def.getRelation(), {\n        where: {\n          [def.foreignKeys]: {\n            'contains': this.makeHasManyForeignKeys(mapper, def, record)\n          }\n        }\n      }, __opts).then((relatedItems) => {\n        def.setLocalField(record, relatedItems)\n      })\n    } else {\n      return this.findAll(relatedMapper, {\n        where: {\n          [def.foreignKeys]: {\n            'isectNotEmpty': records.map((record) => this.makeHasManyForeignKeys(mapper, def, record))\n          }\n        }\n      }, __opts).then((relatedItems) => {\n        const foreignKeysField = def.foreignKeys\n        records.forEach((record) => {\n          const _relatedItems = []\n          const id = utils.get(record, idAttribute)\n          relatedItems.forEach((relatedItem) => {\n            const foreignKeys = utils.get(relatedItems, foreignKeysField) || []\n            if (foreignKeys.indexOf(id) !== -1) {\n              _relatedItems.push(relatedItem)\n            }\n          })\n          def.setLocalField(record, _relatedItems)\n        })\n      })\n    }\n  },\n\n  /**\n   * Load a hasOne relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#loadHasOne\n   * @method\n   * @return {Promise}\n   */\n  loadHasOne (mapper, def, records, __opts) {\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      records = [records]\n    }\n    return this.loadHasMany(mapper, def, records, __opts).then(() => {\n      records.forEach((record) => {\n        const relatedData = def.getLocalField(record)\n        if (utils.isArray(relatedData) && relatedData.length) {\n          def.setLocalField(record, relatedData[0])\n        }\n      })\n    })\n  },\n\n  /**\n   * Return the foreignKey from the given record for the provided relationship.\n   *\n   * There may be reasons why you may want to override this method, like when\n   * the id of the parent doesn't exactly match up to the key on the child.\n   *\n   * Override with care.\n   *\n   * @name Adapter#makeHasManyForeignKey\n   * @method\n   * @return {*}\n   */\n  makeHasManyForeignKey (mapper, def, record) {\n    return def.getForeignKey(record)\n  },\n\n  /**\n   * Return the localKeys from the given record for the provided relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#makeHasManyLocalKeys\n   * @method\n   * @return {*}\n   */\n  makeHasManyLocalKeys (mapper, def, record) {\n    let localKeys = []\n    let itemKeys = utils.get(record, def.localKeys) || []\n    itemKeys = utils.isArray(itemKeys) ? itemKeys : Object.keys(itemKeys)\n    localKeys = localKeys.concat(itemKeys)\n    return unique(localKeys).filter((x) => x)\n  },\n\n  /**\n   * Return the foreignKeys from the given record for the provided relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#makeHasManyForeignKeys\n   * @method\n   * @return {*}\n   */\n  makeHasManyForeignKeys (mapper, def, record) {\n    return utils.get(record, mapper.idAttribute)\n  },\n\n  /**\n   * Return the foreignKey from the given record for the provided relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#makeBelongsToForeignKey\n   * @method\n   * @return {*}\n   */\n  makeBelongsToForeignKey (mapper, def, record) {\n    return def.getForeignKey(record)\n  },\n\n  /**\n   * Retrieve sum of the specified field of the records that match the selection\n   * query. Called by `Mapper#sum`.\n   *\n   * @name Adapter#sum\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {string} field By to sum.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  sum (mapper, field, query, opts) {\n    let op\n    if (!utils.isString(field)) {\n      throw new Error('field must be a string!')\n    }\n    query || (query = {})\n    opts || (opts = {})\n\n    // beforeSum lifecycle hook\n    op = opts.op = 'beforeSum'\n    return utils.resolve(this[op](mapper, field, query, opts))\n      .then(() => {\n        // Allow for re-assignment from lifecycle hook\n        op = opts.op = 'sum'\n        this.dbg(op, mapper, field, query, opts)\n        return utils.resolve(this._sum(mapper, field, query, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, op)\n        response = this.respond(response, opts)\n\n        // afterSum lifecycle hook\n        op = opts.op = 'afterSum'\n        return utils.resolve(this[op](mapper, field, query, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * @name Adapter#respond\n   * @method\n   * @param {Object} response Response object.\n   * @param {Object} opts Configuration options.\n   * return {Object} If `opts.raw == true` then return `response`, else return\n   * `response.data`.\n   */\n  respond (response, opts) {\n    return this.getOpt('raw', opts) ? response : response.data\n  },\n\n  /**\n   * Apply the given update to the record with the specified primary key. Called\n   * by `Mapper#update`.\n   *\n   * @name Adapter#update\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id The primary key of the record to be updated.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  update (mapper, id, props, opts) {\n    props || (props = {})\n    opts || (opts = {})\n    let op\n\n    // beforeUpdate lifecycle hook\n    op = opts.op = 'beforeUpdate'\n    return utils.resolve(this[op](mapper, id, props, opts))\n      .then((_props) => {\n        // Allow for re-assignment from lifecycle hook\n        props = _props === undefined ? props : _props\n        props = withoutRelations(mapper, props, opts)\n        op = opts.op = 'update'\n        this.dbg(op, mapper, id, props, opts)\n        return utils.resolve(this._update(mapper, id, props, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, 'update')\n        response.updated = data ? 1 : 0\n        response = this.respond(response, opts)\n\n        // afterUpdate lifecycle hook\n        op = opts.op = 'afterUpdate'\n        return utils.resolve(this[op](mapper, id, props, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Apply the given update to all records that match the selection query.\n   * Called by `Mapper#updateAll`.\n   *\n   * @name Adapter#updateAll\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The update to apply to the selected records.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  updateAll (mapper, props, query, opts) {\n    props || (props = {})\n    query || (query = {})\n    opts || (opts = {})\n    let op\n\n    // beforeUpdateAll lifecycle hook\n    op = opts.op = 'beforeUpdateAll'\n    return utils.resolve(this[op](mapper, props, query, opts))\n      .then((_props) => {\n        // Allow for re-assignment from lifecycle hook\n        props = _props === undefined ? props : _props\n        props = withoutRelations(mapper, props, opts)\n        op = opts.op = 'updateAll'\n        this.dbg(op, mapper, props, query, opts)\n        return utils.resolve(this._updateAll(mapper, props, query, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        data || (data = [])\n        result || (result = {})\n        let response = new Response(data, result, 'updateAll')\n        response.updated = data.length\n        response = this.respond(response, opts)\n\n        // afterUpdateAll lifecycle hook\n        op = opts.op = 'afterUpdateAll'\n        return utils.resolve(this[op](mapper, props, query, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Update the given records in a single batch. Called by `Mapper#updateMany`.\n   *\n   * @name Adapter#updateMany\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object[]} records The records to update.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  updateMany (mapper, records, opts) {\n    records || (records = [])\n    opts || (opts = {})\n    let op\n    const idAttribute = mapper.idAttribute\n\n    records = records.filter((record) => utils.get(record, idAttribute))\n\n    // beforeUpdateMany lifecycle hook\n    op = opts.op = 'beforeUpdateMany'\n    return utils.resolve(this[op](mapper, records, opts))\n      .then((_records) => {\n        // Allow for re-assignment from lifecycle hook\n        records = _records === undefined ? records : _records\n        records = records.map((record) => withoutRelations(mapper, record, opts))\n        op = opts.op = 'updateMany'\n        this.dbg(op, mapper, records, opts)\n        return utils.resolve(this._updateMany(mapper, records, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        data || (data = [])\n        result || (result = {})\n        let response = new Response(data, result, 'updateMany')\n        response.updated = data.length\n        response = this.respond(response, opts)\n\n        // afterUpdateMany lifecycle hook\n        op = opts.op = 'afterUpdateMany'\n        return utils.resolve(this[op](mapper, records, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  }\n})\n\n/**\n * Create a subclass of this Adapter:\n *\n * @example <caption>Adapter.extend</caption>\n * // Normally you would do: import {Adapter} from 'js-data'\n * const JSData = require('js-data@3.0.0-beta.10')\n * const {Adapter} = JSData\n * console.log('Using JSData v' + JSData.version.full)\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomAdapterClass extends Adapter {\n *   foo () { return 'bar' }\n *   static beep () { return 'boop' }\n * }\n * const customAdapter = new CustomAdapterClass()\n * console.log(customAdapter.foo())\n * console.log(CustomAdapterClass.beep())\n *\n * // Extend the class using alternate method.\n * const OtherAdapterClass = Adapter.extend({\n *   foo () { return 'bar' }\n * }, {\n *   beep () { return 'boop' }\n * })\n * const otherAdapter = new OtherAdapterClass()\n * console.log(otherAdapter.foo())\n * console.log(OtherAdapterClass.beep())\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherAdapterClass () {\n *   Adapter.call(this)\n *   this.created_at = new Date().getTime()\n * }\n * Adapter.extend({\n *   constructor: AnotherAdapterClass,\n *   foo () { return 'bar' }\n * }, {\n *   beep () { return 'boop' }\n * })\n * const anotherAdapter = new AnotherAdapterClass()\n * console.log(anotherAdapter.created_at)\n * console.log(anotherAdapter.foo())\n * console.log(AnotherAdapterClass.beep())\n *\n * @method Adapter.extend\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Adapter class.\n */\n"],"names":["utils","Component"],"mappings":"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"}